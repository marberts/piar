
R version 4.0.5 (2021-03-31) -- "Shake and Throw"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(piar)
> 
> set.seed(1234)
> 
> #---- Length 0 inputs ----
> unclass(elemental_index(integer(0), integer(0), integer(0)))
$index
named list()

$contributions
named list()

$levels
character(0)

$periods
character(0)

> 
> as.matrix(elemental_index(numeric(0)))
<0 x 0 matrix>
> 
> as.matrix(elemental_index(numeric(0)), type = "contributions")
<0 x 0 matrix>
> 
> all.equal(as.data.frame(elemental_index(numeric(0))),
+           data.frame(period = character(0), level = character(0), value = numeric(0)))
[1] TRUE
> 
> all.equal(as.data.frame(elemental_index(numeric(0)), type = "contributions"),
+           data.frame(period = character(0), level = character(0), value = numeric(0)))
[1] TRUE
> 
> #---- Adding up contributions ----
> dat <- data.frame(rel = replace(rlnorm(1e4), sample(1e4, 10), NA),
+                   period = sample(letters, 1e4, TRUE),
+                   ea = sample(1:5, 1e4, TRUE))
> 
> (epr1 <- with(dat, elemental_index(rel, period, ea, contrib = TRUE)))
          a         b         c         d         e         f         g
1 1.1795016 0.9372512 0.9963854 0.9876633 1.0606479 1.2193233 0.9357125
2 0.8649588 0.9870674 1.0275410 1.0543893 1.2847680 0.8786174        NA
3 1.0499289 1.0421933 0.9447611 0.8774825 0.9446547 1.0039014 1.1632233
4 0.9599931 1.0452961 0.9366665 1.0126552 1.0924715 1.0545793 0.9927397
5 1.0380344        NA 1.0358629        NA 0.9698192 1.1150355 1.0132442
          h         i         j        k         l         m         n
1 0.9895446 0.9616791 0.8963501 1.073414 0.8559953 1.1388460 0.8649626
2        NA 0.8919047 0.9507296 1.086750 0.8887897 1.0103301 1.0769206
3 1.0247473 1.0659021 1.2794448 1.115758        NA 1.2754861 1.0329136
4 0.8387395        NA 0.9022128 1.004306 1.0519212 0.8631791 1.2181229
5 0.9445648 1.2148409 1.0134911 1.143393 1.0062292 0.9799716 1.1846872
          o         p         q         r         s         t         u
1 1.0017844 0.9874554 1.0273206 0.7959892 0.9484780 1.1502052 0.9410509
2 1.0511209 0.8798572 1.0413400 1.0979488 0.9036885 1.1482391 1.1523252
3 0.9234156 1.0756050 0.9657632 0.9677068 0.9860874 0.9007004 0.9593033
4 1.1112095 1.1195084 1.1028351 1.0567589 0.9523466 0.8212541        NA
5 1.0433844 0.9942107 1.0147105 0.8198734 1.0169988 0.7954177 0.8557604
          v         w         x        y         z
1 0.8219368 0.9073511 1.0082097 1.049145        NA
2 1.1414045 1.0088473 0.9244572 1.078097 0.9194776
3        NA 0.7753894 1.2874263 1.099617 0.9003615
4 0.9978490 1.1365261 0.9892452 0.967742 1.2081251
5 0.7851386        NA 1.0784924 1.029554 0.9219564
> (epr2 <- with(dat, elemental_index(rel, period, ea, r = -1, contrib = TRUE, na.rm = TRUE)))
          a         b         c         d         e         f         g
1 0.7247840 0.6306511 0.6292257 0.6613724 0.6341632 0.7321376 0.4441965
2 0.5440428 0.6300661 0.6828536 0.6960998 0.7750400 0.4774804 0.4996635
3 0.5742180 0.6446309 0.4753505 0.5117867 0.5331488 0.6708789 0.7894033
4 0.6418796 0.5810404 0.6073013 0.6923003 0.7277696 0.6430914 0.6184851
5 0.6142105 0.7666888 0.6038480 0.5913389 0.6273857 0.7443844 0.6409746
          h         i         j         k         l         m         n
1 0.6749640 0.5896683 0.5654302 0.7825652 0.4999161 0.6600319 0.5103323
2 0.8060113 0.5263799 0.6517825 0.6911474 0.5728483 0.6590486 0.6447630
3 0.6940621 0.7129019 0.8830146 0.7080401 0.6733418 0.8213401 0.6636336
4 0.5447422 0.6300425 0.5909716 0.6752691 0.6436750 0.5326621 0.7695336
5 0.5722150 0.6980440 0.7325223 0.6913966 0.6737121 0.6517634 0.6333026
          o         p         q         r         s         t         u
1 0.6686850 0.6204841 0.5864714 0.5325269 0.6159488 0.6189122 0.5582204
2 0.6526949 0.5191427 0.6001576 0.7084087 0.6020032 0.6240958 0.7109392
3 0.6876136 0.6483357 0.6024728 0.5177528 0.6543424 0.5531714 0.6029692
4 0.6554874 0.7211671 0.7141802 0.7073883 0.5816877 0.5554650 0.6761580
5 0.6570075 0.5509452 0.5736032 0.4727045 0.6769216 0.5009140 0.4730328
          v         w         x         y         z
1 0.4341802 0.5470128 0.6644445 0.6435757 0.5680991
2 0.7524665 0.5929764 0.6405621 0.6240266 0.5853489
3 0.6553243 0.4989662 0.8721370 0.6188208 0.5166762
4 0.6061881 0.7444958 0.5644340 0.6251404 0.7964932
5 0.3890438 0.6811875 0.6443716 0.6728371 0.6414463
> all.equal(cumprod(epr1), t(apply(as.matrix(epr1), 1, cumprod)))
[1] TRUE
> all.equal(epr1$index, lapply(epr1$contributions, function(x) sapply(x, sum) + 1))
[1] TRUE
> all.equal(epr2$index, lapply(epr2$contributions, function(x) sapply(x, sum, na.rm = TRUE) + 1))
[1] TRUE
> 
> #---- Merging ----
> epr3 <- merge(epr1, epr2)
Warning message:
In merge.index(epr1, epr2) : some levels appear in both 'x' and 'y'
> all.equal(epr3[], rbind(epr1[], epr2[]))
[1] TRUE
> all.equal(epr3$index$a, sapply(epr3$contributions$a, sum, na.rm = TRUE) + 1)
[1] TRUE
> epr3$levels
[1] "1" "2" "3" "4" "5"
> 
> #---- Stacking ----
> epr2 <- with(dat, elemental_index(rel, toupper(period), ea, r = -1, contrib = TRUE, na.rm = TRUE))
> epr3 <- stack(epr1, epr2)
> all.equal(epr3[], cbind(epr1[], epr2[]))
[1] TRUE
> all.equal(epr3$index$A, sapply(epr3$contributions$A, sum, na.rm = TRUE) + 1)
[1] TRUE
> epr3$periods
 [1] "a" "b" "c" "d" "e" "f" "g" "h" "i" "j" "k" "l" "m" "n" "o" "p" "q" "r" "s"
[20] "t" "u" "v" "w" "x" "y" "z" "A" "B" "C" "D" "E" "F" "G" "H" "I" "J" "K" "L"
[39] "M" "N" "O" "P" "Q" "R" "S" "T" "U" "V" "W" "X" "Y" "Z"
> 
> #---- Toy example ----
> dat <- data.frame(rel = c(1:6, NA, 7, 8),
+                   period = c(1, 1, 1, 1, 1, 2, 2, 2, 2),
+                   ea = c("11", "11", "12", "12", "13", "11", "12", "11", "14"))
> 
> (epr <- with(dat, elemental_index(rel, period, ea, contrib = TRUE)))
          1        2
11 1.414214 6.480741
12 3.464102       NA
13 5.000000      NaN
14      NaN 8.000000
> unclass(epr)
$index
$index$`1`
      11       12       13       14 
1.414214 3.464102 5.000000      NaN 

$index$`2`
      11       12       13       14 
6.480741       NA      NaN 8.000000 


$contributions
$contributions$`1`
$contributions$`1`$`11`
        1         2 
0.0000000 0.4142136 

$contributions$`1`$`12`
       1        2 
1.071797 1.392305 

$contributions$`1`$`13`
1 
4 

$contributions$`1`$`14`
numeric(0)


$contributions$`2`
$contributions$`2`$`11`
       1        2 
2.596297 2.884444 

$contributions$`2`$`12`
 1 
NA 

$contributions$`2`$`13`
numeric(0)

$contributions$`2`$`14`
1 
7 



$levels
[1] "11" "12" "13" "14"

$periods
[1] "1" "2"

> as.matrix(epr)
          1        2
11 1.414214 6.480741
12 3.464102       NA
13 5.000000      NaN
14      NaN 8.000000
> as.matrix(epr, type = "contributions")
             1        2
11.1 0.0000000 2.596297
11.2 0.4142136 2.884444
12.1 1.0717968       NA
12.2 1.3923048       NA
13.1 4.0000000       NA
14.1        NA 7.000000
> as.data.frame(epr)
  period level    value
1      1    11 1.414214
2      1    12 3.464102
3      1    13 5.000000
4      1    14      NaN
5      2    11 6.480741
6      2    12       NA
7      2    13      NaN
8      2    14 8.000000
> as.data.frame(epr, type = "contributions")
  period level     value
1      1  11.1 0.0000000
2      1  11.2 0.4142136
3      1  12.1 1.0717968
4      1  12.2 1.3923048
5      1  13.1 4.0000000
6      2  11.1 2.5962965
7      2  11.2 2.8844442
8      2  12.1        NA
9      2  14.1 7.0000000
> epr[, 1]
      11       12       13       14 
1.414214 3.464102 5.000000      NaN 
> epr[1, ]
       1        2 
1.414214 6.480741 
> cumprod(epr)
          1        2
11 1.414214 9.165151
12 3.464102       NA
13 5.000000      NaN
14      NaN      NaN
> 
> epr2 <- with(dat, elemental_index(rel, period, ea))
> 
> all.equal(epr[], epr2[])
[1] TRUE
> all.equal(epr2, with(as.data.frame(epr2), elemental_index(value, period, level)))
[1] TRUE
> all.equal(epr$levels, epr2$levels)
[1] TRUE
> all.equal(epr$periods, epr2$periods)
[1] TRUE
> 
> as.matrix(epr2, type = "contributions")
<0 x 0 matrix>
> as.data.frame(epr2, type = "contributions")
[1] period level  value 
<0 rows> (or 0-length row.names)
> 
> proc.time()
   user  system elapsed 
  0.146   0.030   0.168 
